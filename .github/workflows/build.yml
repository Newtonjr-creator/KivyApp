name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Set up Java environment
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    # Install dependencies
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip python3 python3-pip

    # Download Android SDK Command Line Tools
    - name: Download Android SDK Command Line Tools
      run: |
        mkdir -p /home/runner/android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip
        unzip -o commandlinetools.zip -d /home/runner/android-sdk/cmdline-tools
        mkdir -p /home/runner/android-sdk/cmdline-tools/latest
        mv /home/runner/android-sdk/cmdline-tools/cmdline-tools/* /home/runner/android-sdk/cmdline-tools/latest

    # Install sdkmanager into the expected path
    - name: Install sdkmanager into expected path
      run: |
        SDKMANAGER_PATH="/home/runner/.buildozer/android/platform/android-sdk/tools/bin"
        if [ ! -f "$SDKMANAGER_PATH/sdkmanager" ]; then
          echo "sdkmanager not found. Installing sdkmanager into the expected directory..."
          mkdir -p $SDKMANAGER_PATH
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdkmanager.zip
          unzip -o sdkmanager.zip -d /home/runner/android-sdk/cmdline-tools/bin/
          mv /home/runner/android-sdk/cmdline-tools/bin/sdkmanager $SDKMANAGER_PATH/
          rm sdkmanager.zip
        fi

    # Accept Android SDK Licenses
    - name: Accept SDK Licenses
      run: |
        yes | /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

    # Install Build Tools, Platform Tools, and Extras
    - name: Install Android Build Tools and Dependencies
      run: |
        /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "build-tools;33.0.2" \
          "platforms;android-33" \
          "extras;android;m2repository" \
          "extras;google;m2repository"

    # Install AIDL if not found
    - name: Verify and Install AIDL
      run: |
        AIDL_PATH="/home/runner/android-sdk/build-tools/33.0.2/aidl"
        if [ ! -f "$AIDL_PATH" ]; then
          echo "AIDL is not installed. Attempting independent installation..."
          /home/runner/android-sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.2"
          if [ -f "$AIDL_PATH" ]; then
            echo "AIDL successfully installed."
          else
            echo "AIDL installation failed. Exiting..."
            exit 1
          fi
        else
          echo "AIDL found at $AIDL_PATH"
        fi

    # Ensure Build Tools Path is correctly linked
    - name: Ensure Build Tools Path
      run: |
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk
        ln -sf /home/runner/android-sdk/build-tools /home/runner/.buildozer/android/platform/android-sdk/

    # Install Python dependencies (e.g., buildozer and cython)
    - name: Install Python Dependencies
      run: |
        pip3 install --upgrade pip
        pip3 install buildozer Cython

    # Build APK
    - name: Build APK
      run: |
        cd $GITHUB_WORKSPACE
        buildozer android debug

    # Archive APK for download
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: FlappyBird-APK
        path: $GITHUB_WORKSPACE/bin/*.apk
